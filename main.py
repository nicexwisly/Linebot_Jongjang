from flask import Flask, request, jsonify, render_template_string
import openai
import pandas as pd
import os
import requests

app = Flask(__name__)

openai.api_key = os.environ.get("OPENAI_API_KEY")
LINE_TOKEN = os.environ.get("LINE_CHANNEL_ACCESS_TOKEN")

df = pd.read_excel("data.xlsx")

def search_product(keyword):
    result = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"].str.lower().str.contains(keyword.lower().strip(), na=False)]
    if result.empty:
        return "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö"
    row = result.iloc[0]
    return f"‡∏û‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞: {row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']} ‡∏£‡∏≤‡∏Ñ‡∏≤ {row['‡∏£‡∏≤‡∏Ñ‡∏≤']} ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {row['‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠']} ‡∏ä‡∏¥‡πâ‡∏ô"

@app.route("/callback", methods=["POST"])
def callback():
    body = request.json
    try:
        events = body["events"]
        for event in events:
            if event["type"] == "message" and event["message"]["type"] == "text":
                user_msg = event["message"]["text"]
                reply_token = event["replyToken"]
                if user_msg.startswith("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:") or user_msg.startswith("@‡∏ö‡∏≠‡∏ó") or user_msg.startswith("‡∏ñ‡∏≤‡∏°:"):
                    keyword = user_msg.split(":", 1)[1].strip()
                    answer = search_product(keyword)
                    reply_to_line(reply_token, answer)
        return jsonify({"status": "ok"})
    except Exception as e:
        return jsonify({"error": str(e)}), 500

def reply_to_line(reply_token, msg):
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {LINE_TOKEN}"
    }
    payload = {
        "replyToken": reply_token,
        "messages": [{"type": "text", "text": msg}]
    }
    requests.post("https://api.line.me/v2/bot/message/reply", json=payload, headers=headers)

@app.route("/", methods=["GET"])
def index():
    return "LINE Stock Bot is running!"

@app.route("/upload", methods=["GET", "POST"])
def upload_file():
    if request.method == "POST":
        if 'file' not in request.files:
            return "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î", 400
        file = request.files['file']
        if file.filename == '':
            return "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå", 400
        if file and file.filename.endswith('.xlsx'):
            file.save("data.xlsx")
            global df
            df = pd.read_excel("data.xlsx")
            return "‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
        else:
            return "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå .xlsx", 400

    html_form = '''
    <!DOCTYPE html>
    <html>
    <head>
        <title>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î Stock Excel</title>
    </head>
    <body>
        <h2>üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Stock ‡πÉ‡∏´‡∏°‡πà (.xlsx)</h2>
        <form method="POST" enctype="multipart/form-data">
            <input type="file" name="file" accept=".xlsx" required>
            <button type="submit">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î</button>
        </form>
    </body>
    </html>
    '''
    return render_template_string(html_form)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))

@app.route("/upload", methods=["GET", "POST"])
def upload_file():
    if request.method == "POST":
        if 'file' not in request.files:
            return "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î", 400
        file = request.files['file']
        if file.filename == '':
            return "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå", 400
        if file and file.filename.endswith('.xlsx'):
            file.save("BU.xlsx")

            # ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 10 (skiprows=9), ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå E, F, I, J
            try:
                df_raw = pd.read_excel("BU.xlsx", skiprows=9, usecols="E,F,I,J")
                df_ready = df_raw.rename(columns={
                    "ItemNo": "‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°",
                    "Description": "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                    "Selling Price": "‡∏£‡∏≤‡∏Ñ‡∏≤",
                    "ASOH": "‡∏°‡∏µ Stock ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà"
                })
                df_ready.to_excel("data_ready.xlsx", index=False)
                df_ready.to_csv("data_ready.csv", index=False)
                df_ready.to_json("data_ready.json", orient="records", force_ascii=False)
                return "‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß! ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á .xlsx / .csv / .json"
            except Exception as e:
                return f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå: {str(e)}", 500

        else:
            return "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå .xlsx", 400
        
@app.route("/api/upload-file", methods=["POST"])
def api_upload_file():
    if 'file' not in request.files:
        return "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤", 400
    file = request.files['file']
    if file.filename.endswith('.xlsx'):
        file.save("BU.xlsx")
        try:
            df_raw = pd.read_excel("BU.xlsx", skiprows=9, usecols="E,F,I,J")
            df_ready = df_raw.rename(columns={
                "ItemNo": "‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°",
                "Description": "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                "Selling Price": "‡∏£‡∏≤‡∏Ñ‡∏≤",
                "ASOH": "‡∏°‡∏µ Stock ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà"
            })
            df_ready.to_excel("data_ready.xlsx", index=False)
            df_ready.to_csv("data_ready.csv", index=False)
            df_ready.to_json("data_ready.json", orient="records", force_ascii=False)
            return "‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
        except Exception as e:
            return f"‚ùå Error: {str(e)}", 500
    return "‚ùå ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå .xlsx", 400

    # HTML ‡∏ü‡∏≠‡∏£‡πå‡∏°
    html_form = '''
    <!DOCTYPE html>
    <html>
    <head>
        <title>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î Stock Excel</title>
    </head>
    <body>
        <h2>üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Stock BU (.xlsx)</h2>
        <form method="POST" enctype="multipart/form-data">
            <input type="file" name="file" accept=".xlsx" required>
            <button type="submit">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á</button>
        </form>
    </body>
    </html>
    '''
    return render_template_string(html_form)

