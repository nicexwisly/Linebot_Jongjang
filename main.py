from flask import Flask, request, jsonify
import pandas as pd
import os
import requests

app = Flask(__name__)

FILE_NAME = "data.xlsx"
LINE_ACCESS_TOKEN = os.getenv("LINE_CHANNEL_ACCESS_TOKEN") or "YEECvUaqmXwCfMq2iFPTrzctFgj/BBMLcalaHei2myZT+9mOheNn8QFzwNPA6zvWrD/F5BSXgZ7noMupqPXgTzetpUAswQ3as+BY2Az/GYE3JCKAMhlhc3ayOvk/tW7tiwDS/9RYz12PKOZ9z4nTBwdB04t89/1O/w1cDnyilFU="

def reply_to_line(reply_token, message):
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {LINE_ACCESS_TOKEN}"
    }
    body = {
        "replyToken": reply_token,
        "messages": [{"type": "text", "text": message}]
    }
    r = requests.post("https://api.line.me/v2/bot/message/reply", headers=headers, json=body)
    print("LINE API response:", r.status_code, r.text)

@app.route("/api/upload-file", methods=["POST"])
def upload_file():
    if 'file' not in request.files:
        return jsonify({"status": "fail", "message": "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠"}), 400
    file = request.files['file']
    if file.filename == '':
        return jsonify({"status": "fail", "message": "‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ß‡πà‡∏≤‡∏á"}), 400
    try:
        file.save(FILE_NAME)
        return jsonify({"status": "success", "message": f"‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå {FILE_NAME} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"}), 200
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)}), 500

def search_product(keyword):
    global json_data
    print(f"[DEBUG] keyword ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤: {keyword}")
    print(f"[DEBUG] ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô json_data ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(json_data)}")

    if not json_data:
        return "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πà‡∏≠‡∏ô"

    results = [row for row in json_data if keyword in row.get("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "")]
    print(f"[DEBUG] ‡∏û‡∏ö {len(results)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà match ‡∏Å‡∏±‡∏ö keyword")

    if not results:
        return "‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö"

    row = results[0]
    print(f"[DEBUG] ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠:", row)

    try:
        return f"‡∏û‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞: {row.get('‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°')} {row.get('‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤')} ‡∏£‡∏≤‡∏Ñ‡∏≤ {row.get('‡∏£‡∏≤‡∏Ñ‡∏≤')} ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {row.get('‡∏°‡∏µ Stock ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà')} ‡∏ä‡∏¥‡πâ‡∏ô"
    except Exception as e:
        return f"‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {str(e)}"

@app.route("/callback", methods=["POST"])
def callback():
    body = request.json
    try:
        print("üì• body:", body)
        events = body.get("events", [])
        for event in events:
            if event.get("type") == "message" and event["message"]["type"] == "text":
                user_msg = event["message"]["text"]
                reply_token = event["replyToken"]
                print("üë§ user_msg:", user_msg)

                if user_msg.startswith("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:"):
                    keyword = user_msg.replace("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:", "").strip()
                    answer = search_product(keyword)
                else:
                    answer = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤"

                reply_to_line(reply_token, answer)
        return jsonify({"status": "ok"}), 200

    except Exception as e:
        import traceback
        traceback.print_exc()  # ‚úÖ ‡∏û‡∏¥‡∏°‡∏û‡πå error ‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
        return jsonify({"error": str(e)}), 500
    
json_data = []  # ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö JSON ‡∏ó‡∏µ‡πà upload ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤

@app.route("/api/upload-json", methods=["POST"])
def upload_json():
    global json_data
    try:
        json_data = request.get_json()
        print("‚úÖ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö JSON ‡πÅ‡∏•‡πâ‡∏ß:", len(json_data), "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        return jsonify({"status": "success"})
    except Exception as e:
        print("ERROR:", str(e)) 
        return jsonify({"status": "error", "message": str(e)}), 500

@app.route("/", methods=["GET"])
def home():
    return "‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!"

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000, debug=True)  # ‚úÖ debug=True